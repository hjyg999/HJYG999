# To enable ProGuard in your project, edit project.properties
# to define the proguard.config property as described in that file.
#
# Add project specific ProGuard rules here.
# By default, the flags in this file are appended to flags specified
# in ${sdk.dir}/tools/proguard/proguard-android.txt
# You can edit the include path and order by changing the ProGuard
# include property in project.properties.
#
# For more details, see
#   http://developer.android.com/guide/developing/tools/proguard.html

# Add any project specific keep options here:

# If your project uses WebView with JS, uncomment the following
# and specify the fully qualified class name to the JavaScript interface
# class:
#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
#   public *;
#}

-optimizationpasses 7  #指定代码的压缩级别 0 - 7  
-dontusemixedcaseclassnames  #是否使用大小写混合  
-dontskipnonpubliclibraryclasses  #如果应用程序引入的有jar包，并且想混淆jar包里面的class  
-dontpreverify  #混淆时是否做预校验（可去掉加快混淆速度）  
-verbose #混淆时是否记录日志（混淆后生产映射文件 map 类名 -> 转化后类名的映射  
-optimizations !code/simplification/arithmetic,!field/*,!class/merging/*  #淆采用的算法

-keep public class * extends android.app.Activity  #所有activity的子类不要去混淆  
-keep public class * extends android.app.Application  
-keep public class * extends android.app.Service  
-keep public class * extends android.content.BroadcastReceiver  
-keep public class * extends android.content.ContentProvider  
-keep public class * extends android.app.backup.BackupAgentHelper  
-keep public class * extends android.preference.Preference  
-keep public class com.android.vending.licensing.ILicensingService #指定具体类不要去混淆  
  
-keepclasseswithmembernames class * {  
    native <methods>;  #保持 native 的方法不去混淆  
}  
  
-keepclasseswithmembers class * {  
    public <init>(android.content.Context, android.util.AttributeSet);  #保持自定义控件类不被混淆，指定格式的构造方法不去混淆  
}  

#http相关

-keep class org.apache.http.entity.mime.** {*;} #http 中所有类及类里面的内容不要混淆
  
-keepclasseswithmembers class * {  
    public <init>(android.content.Context, android.util.AttributeSet, int);  
}  
  
-keepclassmembers class * extends android.app.Activity {   
    public void *(android.view.View); #保持指定规则的方法不被混淆（Android layout 布局文件中为控件配置的onClick方法不能混淆）  
}  
  
-keep public class * extends android.view.View {  #保持自定义控件指定规则的方法不被混淆  
    public <init>(android.content.Context);  
    public <init>(android.content.Context, android.util.AttributeSet);  
    public <init>(android.content.Context, android.util.AttributeSet, int);  
    public void set*(...);  
}  

-keep public class * extends android.widget.BaseAdapter {*;} #adapter也不能混淆
  
-keepclassmembers enum * {  #保持枚举 enum 不被混淆  
    public static **[] values();  
    public static ** valueOf(java.lang.String);  
}  
  
-keep class * implements android.os.Parcelable {  #保持 Parcelable 不被混淆（aidl文件不能去混淆）  
    public static final android.os.Parcelable$Creator *;  
}  
  
-keepnames class * implements java.io.Serializable #需要序列化和反序列化的类不能被混淆（注：Java反射用到的类也不能被混淆）  
  
-keepclassmembers class * implements java.io.Serializable { #保护实现接口Serializable的类中，指定规则的类成员不被混淆  
    static final long serialVersionUID;  
    private static final java.io.ObjectStreamField[] serialPersistentFields;  
    !static !transient <fields>;  
    private void writeObject(java.io.ObjectOutputStream);  
    private void readObject(java.io.ObjectInputStream);  
    java.lang.Object writeReplace();  
    java.lang.Object readResolve();  
}  
  
-keepattributes Signature  #过滤泛型（不写可能会出现类型转换错误，一般情况把这个加上就是了）  
  
-keepattributes *Annotation*  #假如项目中有用到注解，应加入这行配置  
  
-keep class **.R$* { *; }  #保持R文件不被混淆，否则，你的反射是获取不到资源id的  
  
-keep class **.Webview2JsInterface { *; }  #保护WebView对HTML页面的API不被混淆  
-keepclassmembers class * extends android.webkit.WebViewClient {  #如果你的项目中用到了webview的复杂操作 ，最好加入  
     public void *(android.webkit.WebView,java.lang.String,android.graphics.Bitmap);  
     public boolean *(android.webkit.WebView,java.lang.String);  
}  
-keepclassmembers class * extends android.webkit.WebChromeClient {  #如果你的项目中用到了webview的复杂操作 ，最好加入  
     public void *(android.webkit.WebView,java.lang.String);  
}  
#对WebView的简单说明下：经过实战检验,做腾讯QQ登录，如果引用他们提供的jar，若不加防止WebChromeClient混淆的代码，oauth认证无法回调，反编译基代码后可看到他们有用到WebChromeClient，加入此代码即可。  
  
-keepclassmembernames class com.md.hjyg.entity.** { *; }  #转换JSON的JavaBean，类成员名称保护，使其不被混淆  
-keep class com.md.hjyg.entity.* {*;} 
-keep class com.md.hjyg.utils.* {*;} 
-keep class com.md.hjyg.xinTouConstant.* {*;} 
##################################################################  
# 下面都是项目中引入的第三方 jar 包。第三方 jar 包中的代码不是我们的目标和关心的对象，故而对此我们全部忽略不进行混淆。  
##################################################################  
-libraryjars libs/android-support-v4.jar  
-dontwarn android.support.v4.**  
-keep class android.support.v4.** { *; }    
-keep interface android.support.v4.** { *; }  
-keep public class * extends android.support.v4.**   
-keep public class * extends android.app.Fragment  
  
-libraryjars libs/SocialSDK_sms.jar
-dontwarn com.umeng.socialize.** 
-keep class com.umeng.socialize.** { *; } 

-libraryjars libs\securepay_auth_2.4.2.04.jar
-dontwarn com.yintong.**
-keep class assets.** { *; } 
-keep class com.yintong.** { *; } 

-libraryjars libs\umeng_social_sdk.jar
-dontwarn com.umeng.** 
-keep class com.umeng.** { *; } 

-libraryjars libs\commons-lang-2.6.jar
-dontwarn org.apache.commons.lang.** 
-keep class org.apache.commons.lang.** { *; } 

-libraryjars libs\volley.jar
-dontwarn com.android.volley.** 
-keep class com.android.volley.** { *; } 

-libraryjars libs\httpmime-4.1.3.jar
-dontwarn org.apache.http.entity.mime.** 
-keep class org.apache.http.entity.mime.** { *; } 

-libraryjars libs\SocialSDK_QQZone_1.jar
-dontwarn com.tencent.stat.** 
-keep class com.tencent.stat.** { *; } 

-libraryjars libs\simple-xml-2.4.1.jar
-dontwarn org.simpleframework.xml.** 
-keep class org.simpleframework.xml.** { *; } 

-libraryjars libs\umeng-analytics-v5.6.1.jar
-dontwarn com.umeng.analytics.** 
-keep class u.aly.** { *; } 
-keep class com.umeng.analytics.** { *; } 

-libraryjars libs\picasso-2.3.2.jar
-dontwarn com.squareup.picasso.** 
-keep class com.squareup.picasso.** { *; } 

-libraryjars libs\SocialSDK_WeiXin_1.jar
-dontwarn com.tencent.** 
-keep class com.tencent.** { *; } 

-libraryjars libs\SocialSDK_QQZone_2.jar
-dontwarn com.tencent.** 
-keep class assets.** { *; } 
-keep class com.tencent.** { *; } 

-libraryjars libs\gson-2.2.2.jar
-dontwarn com.google.gson.** 
-keep class com.google.gson.** { *; } 

-libraryjars libs\SocialSDK_email.jar
-dontwarn com.umeng.socialize.** 
-keep class com.umeng.socialize.** { *; } 

-libraryjars libs\SocialSDK_Sina.jar
-dontwarn com.** 
-keep class com.** { *; } 

-libraryjars libs\SocialSDK_QQZone_3.jar
-dontwarn com.umeng.socialize.** 
-keep class com.umeng.socialize.** { *; } 

-libraryjars libs\SocialSDK_WeiXin_2.jar
-dontwarn com.umeng.socialize.weixin.** 
-keep class com.umeng.socialize.weixin.** { *; } 
